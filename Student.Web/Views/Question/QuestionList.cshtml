@model QuestionModel

<div class="row">
    <div class="col-lg-12">
        <h4>Sorular</h4>
        <header class="flexbox align-items-center media-list-header bg-transparent b-0 py-16 pl-0" style="width: 100%; padding-top: 0px !important;">
            <div class="flexbox align-items-left" style="width: 100%;">
                <div class="input-group">
                    <input type="text" id="input_search" class="form-control" placeholder="Search Question" aria-describedby="basic-addon1">
                    <span class="input-group-addon">
                        <i class="fa fa-search"></i>
                    </span>
                </div>
            </div>

            <div class="flexbox align-items-right">
                <div class="btn-group pull-right">

                    <button class="btn btn-label btn-info" @(Model.Question?.Id <= 0 ? ("onclick=GetMessage() data-url=#") : ("data-provide=modaler data-url=" + Url.Action("QuestionCreate") + "")) title="Add New" data-confirmVisible="false" data-footerVisible="false" data-size="lg" data-title=" Question Form"><label><i class="fa fa-plus"></i></label> Question Form</button>

                </div>
            </div>

        </header>
    </div>
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th><input name="select_all" value="1" id="example-select-all" type="checkbox" /></th>
                                <th>Content</th>
                                <th>Active</th>
                                <th>Operations</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                    <button class="selectedDelete btn btn-danger" style="height: 31px; margin-right: 3px;" tabindex="0" type="button">
                        Delete All
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts{
    <script data-provide="sweetalert">
        var table = null;
        $(function () {
            table = $('.table').DataTable({
                "processing": true,
                "language": {
                    processing: '<i class="fa fa-spinner fa-spin fa-2x fa-fw" style="border-style:none;border-width:0px;"></i><span class="sr-only">Loading...</span>'
                },
                "serverSide": true,
                "searching": true,
                "dom": 't,p,l,r,i,B', "responsive": true, "bAutoWidth": false, "buttons": ['excel', 'pdf',

                ],
                "ajax": {
                    url: '@Url.Action("QuestionListQuery")',
                    type: 'POST'
                },
                "columns": [
                    { "data": "id" },
                    { "data": "content" },
                    {
                    "data": "id",
                    "render": function (data, type, row) {
                        var isActive = "";
                        if (row.isActive == true) {
                            isActive = "checked=";

                        }

                        var editButton = '<label class="switch switch-lg switch-success"><input  class="parent pr2" id="testCh" onchange="ActiveChangeItem(' + data + ',this)"  type="checkbox" ' + isActive + '/><span class="switch-indicator"></span><span class="switch-description"></span></label>';

                        return editButton;
                    }
                },
                {
                    "data": "id",
                    "render": function (data, type, row) {
                        var editUrl = ReplaceParameters('@Url.Action("QuestionEdit", new{ QuestionId = -1})', data);
                        var editButton = '<a title="Edit" data-provide="modaler" data-size="lg"  data-title=" Question Form"  data-url="' +
                            editUrl + '" class="table-action hover-danger" href="#"><i class="ti-pencil islem-button"></i></a>';

                        var deleteUrl = 'javascript:DeleteItem(' + data + ')';
                        var deleteButton = '<a title="Delete" class="table-action hover-danger" href="' +
                            deleteUrl + '"><i class="ti-trash islem-button"></i></a>';

                        return editButton + deleteButton;
                    }
                }

                ],
                'columnDefs': [{
                    'targets': 0,
                    'searchable': false,
                    'orderable': false,
                    'className': 'dt-body-center',
                    'render': function (data, type, full, meta) {
                        return '<input type="checkbox"  class="icheck" name="' + data + '" value="' + $('<div/>').text(data).html() + '">';
                    }
                }],
                "order": [[ 0, "desc" ]]
            });
            $('#input_search').keyup(function () {
                table.search($(this).val()).draw();
            });
        });

        function DeleteItem(id) {
            swal({
                title: 'Are you sure?',
                text: 'Are you sure you want to delete this record?',
                type: 'warning',
                showCancelButton: true,
                confirmButtonClass: 'btn btn-danger',
                cancelButtonClass: 'btn btn-seconary',
                confirmButtonText: 'YES, DELETE',
                cancelButtonText: 'NO'
            }).then(function () {
                $.ajax({
                    url: ReplaceParameters('@Url.Action("QuestionDelete", new{id = -1})', id), success: function (result) {
                        if (result) {

                            swal({
                                title: 'Successful!',
                                text: 'Registration successfully deleted',
                                type: 'success',
                                timer: 2000
                            });
                            ReloadTable();
                        }
                    }
                });
            });
        }
        function ActiveChangeItem(id, element) {
            var active = false;
            if ($(element).attr('checked')) {
                $(element).removeAttr("checked");
            } else {
                active = true;
                $(element).attr("checked","true");
            }
          $.ajax({
              url: '@Url.Action("QuestionActiveChange")?id=' + id + '&active=' + active,
              success:function(result) {

                  if (result ) {
                      swal({
                          title: 'Successful!',
                          text: 'Change applied.',
                          type: 'success',
                          timer: 2000
                      });
                      ReloadTable();
                  }
              }
          });
        }
         $('#example-select-all').on('click', function () {
            // Get all rows with search applied
            var rows = table.rows({ 'search': 'applied' }).nodes();
            // Check/uncheck checkboxes for all rows in the table
            $('.icheck', rows).prop('checked', this.checked);
        });

        $('.table tbody').on('change', 'input[type="checkbox"]', function () {
            // If checkbox is not checked
            if (!this.checked) {
                var el = $('#example-select-all').get(0);
                // If "Select all" control is checked and has 'indeterminate' property
                if (el && el.checked && ('indeterminate' in el)) {
                    // Set visual state of "Select all" control
                    // as 'indeterminate'
                    el.indeterminate = true;
                }
            }
        });
        $(document).on("click", ".selectedDelete", function () {
            var silinecekler = "";
            $(".icheck").each(function (e) {
                if (this.checked) {
                    var id = $(this).val();
                    silinecekler += id + ",";
                }
            });
            if (silinecekler != "")
            {
                swal({
                    title: 'Are you sure?',
                    text: 'Are you sure you want to delete this record?',
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonClass: 'btn btn-danger',
                    cancelButtonClass: 'btn btn-seconary',
                    confirmButtonText: 'YES, DELETE',
                    cancelButtonText: 'NO'
                }).then(function () {
                    $.ajax({
                        url: ReplaceParameters('@Url.Action("SelectedDelete", new{ids = -1})', silinecekler),
                        method: "GET",
                        success: function (response) {

                            if (response ) {
                                swal({
                                    title: 'Successful!',
                                    text: 'Change applied.',
                                    type: 'success',
                                    timer: 2000
                                });
                                ReloadTable();
                            }

                        }
                    });
                });
            }
            else {
                swal({
                    title: 'Warning!',
                    text: 'You have not made a choice.',
                    type: 'warning',
                });
            }
        });

        function ReloadTable() {
            table.draw();
        }

        function GetMessage() {
            swal({
                title: 'Error!',
                text: 'Please select an event first.',
                type: 'error',
                confirmButtonText: 'DONE'
            });
        }
    </script>
}
