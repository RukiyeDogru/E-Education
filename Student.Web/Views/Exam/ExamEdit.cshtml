@model ExamModel
@{
    Layout = null;
}

<div class="row">
    <div class="col-lg-12">
        <form data-provide="jqueryform" id="ExamForm" action="@Url.Action("ExamEdit",new{ExamId = Model.Exam.Id})" method="post">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group">
                                <label> Exam Name </label>
                                @Html.TextBoxFor(model => model.Exam.ExamName, new { @class = "form-control", placeholder = "Enter Exam Name", required = "" })
                                @Html.HiddenFor(model => model.Exam.Id)
                            </div>
                            @*<div class="form-group">
                                <label>Surname </label>
                                @Html.TextBoxFor(model => model.Student.Surname, new { @class = "form-control", placeholder = "Enter Student Surname", required = "" })
                            </div>*@
                            @*<div class="form-group">
                                <label>Email </label>
                                @Html.TextBoxFor(model => model.Student.Email, new { @class = "form-control", placeholder = "Enter Student Email", required = "" })
                            </div>*@

                            <div class="form-group">
                                <label>Exam Lesson Name</label>
                                @Html.DropDownListFor(model => model.Exam.LessonId, new SelectList(Model.LessonGroup, "Id", "LessonName"), "Choose Exam Lesson", new { @class = "form-control", data_live_search = "true", data_provide = "selectpicker", data_size = "10" })
                            </div>

                        </div>

                        <div class="form-group">
                            <label class="switch switch-lg switch-success">
                                @Html.CheckBoxFor(model => model.Exam.IsActive, new { @class = "parent pr2" })
                                <span class="switch-indicator"></span>
                                <span class="switch-description">
                                    Active
                                </span>
                            </label>
                        </div>


                    </div>
                </div>
                <div class="modal-footer modal-footer2">
                    <button type="button" class="btn btn-label btn-danger" data-dismiss="modal"><label><i class="fa fa-close"></i></label> Close</button>
                    <button type="submit" class="btn btn-label btn-success"><label><i class="fa fa-save"></i></label> Save</button>
                </div>
            </div>
        </form>
    </div>
</div>
<script src="/assets/vendor/bootstrap-datepicker/js/bootstrap-datepicker.min.js"></script>
<link href="/assets/vendor/bootstrap-datepicker/css/bootstrap-datepicker3.min.css" rel="stylesheet">
<script src="/assets/vendor/jquery-validation/jquery.validate.min.js"></script>
<script src="~/Assets/vendor/jquery-validation/additional-methods.js"></script>
<script data-provide="sweetalert">
    $(function () {
        $("#ExamForm").validate({
            ignore: ".ignore",
            rules: {
                "@(Html.NameFor(model => model.Exam.ExamName))": { required: true },
                "@(Html.NameFor(model => model.Exam.LessonId))": { required: true },
                }
            });
    });

</script>

<script>
    $('form').on('submit', function (e) {
        e.preventDefault();
        if ($("#ExamForm").valid()) {
            LoadingRun();
            $(this).ajaxSubmit({
                success: function (responseText) {
                    LoadingStop();
                    if (responseText.value.validErrors || responseText.value.errorMessage) {

                        var errorMessage = "";
                        $.each(responseText.value.validErrors, function (i, l) {
                            errorMessage += l.message + "<br>";
                        });
                        if (responseText.value.errorMessage)
                            errorMessage += responseText.value.errorMessage + "<br>";
                        swal({
                            title: 'Error!',
                            html: errorMessage,
                            type: 'error'
                        });
                    } else {

                        swal({
                            title: 'Successful!',
                            text: 'Operation saved successfull',
                            type: 'success',
                            timer: 2000
                        });
                        $('.close').click();
                        ReloadTable();
                    }
                },
                error: function (responseText) {
                    LoadingStop();
                    var errorMessage = "";
                    $.each(responseText.value.validErrors, function (i, l) {
                        errorMessage += l.message + "<br>";
                    });
                    if (responseText.value.errorMessage)
                        errorMessage += responseText.value.errorMessage + "<br>";
                    swal({
                        title: 'Error!',
                        html: errorMessage,
                        type: 'error'
                    });
                },
                url: $(this).attr("action")
            });
        }

    });
</script>

